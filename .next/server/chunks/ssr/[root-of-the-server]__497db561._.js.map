{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chira/Desktop/projectis/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chira/Desktop/projectis/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chira/Desktop/projectis/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chira/Desktop/projectis/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chira/Desktop/projectis/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chira/Desktop/projectis/src/app/%28auth%29/login/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { ShieldCheck, UserPlus } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\n\n// --- Real Secure Password Handling ---\n// This uses the Web Crypto API, a standard browser feature for cryptography.\n\n// Function to convert string to an ArrayBuffer for crypto functions\nconst str2ab = (str: string) => {\n  const buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  const bufView = new Uint16Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n// Function to convert ArrayBuffer to a hex string for storage\nconst ab2hex = (buf: ArrayBuffer) => {\n  return Array.prototype.map.call(new Uint8Array(buf), (x) => ('00' + x.toString(16)).slice(-2)).join('');\n};\n\n// Function to generate a secure hash from a password and salt\n// Uses PBKDF2, a standard key derivation function, to make password cracking much harder.\nconst createHash = async (password: string, salt: string): Promise<string> => {\n  const passwordBuffer = str2ab(password);\n  const saltBuffer = str2ab(salt);\n\n  const key = await window.crypto.subtle.importKey(\n    'raw',\n    passwordBuffer,\n    { name: 'PBKDF2' },\n    false,\n    ['deriveBits']\n  );\n\n  const bits = await window.crypto.subtle.deriveBits(\n    {\n      name: 'PBKDF2',\n      salt: saltBuffer,\n      iterations: 100000, // A high number of iterations is crucial for security\n      hash: 'SHA-256',\n    },\n    key,\n    256\n  );\n\n  return ab2hex(bits);\n};\n\n// Generates a random salt for each new user\nconst generateSalt = (): string => {\n    const array = new Uint8Array(16);\n    window.crypto.getRandomValues(array);\n    return ab2hex(array);\n};\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [activeTab, setActiveTab] = useState('login');\n\n\n  const handleRegister = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    const formData = new FormData(e.currentTarget);\n    const username = formData.get('username') as string;\n    const password = formData.get('password') as string;\n\n    if (!username || !password) {\n        toast({\n            variant: 'destructive',\n            title: 'Missing Fields',\n            description: 'Please provide both username and password.',\n        });\n        setIsSubmitting(false);\n        return;\n    }\n\n    if (localStorage.getItem(`fortress_user_${username}`)) {\n        toast({\n            variant: 'destructive',\n            title: 'Registration Failed',\n            description: 'A user with this username already exists.',\n        });\n        setIsSubmitting(false);\n        return;\n    }\n\n    try {\n        // 1. Setup (Registration)\n        // Generate a unique salt for the new user.\n        const salt = generateSalt();\n        // Hash the password with the salt. The password itself is never stored.\n        const hash = await createHash(password, salt);\n        \n        // The server (localStorage) stores the user's info with the salt and hash.\n        const user_data = { salt, hash };\n        localStorage.setItem(`fortress_user_${username}`, JSON.stringify(user_data));\n\n        toast({\n            title: 'Registration Successful',\n            description: 'You can now log in with your credentials.',\n        });\n        \n        // Switch to login tab after successful registration\n        setActiveTab('login');\n\n    } catch (error) {\n        console.error(\"Registration error:\", error);\n        toast({\n            variant: 'destructive',\n            title: 'Registration Failed',\n            description: 'An unexpected error occurred. Please try again.',\n        });\n    } finally {\n        setIsSubmitting(false);\n    }\n  };\n\n\n  const handleLogin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    const formData = new FormData(e.currentTarget);\n    const username = formData.get('username') as string;\n    const password = formData.get('password') as string;\n\n    if (!username || !password) {\n        toast({\n            variant: 'destructive',\n            title: 'Missing Fields',\n            description: 'Please provide both username and password.',\n        });\n        setIsSubmitting(false);\n        return;\n    }\n\n    try {\n        // 2. Login (Authentication)\n        // Retrieve the stored user data (salt and hash).\n        const userDataString = localStorage.getItem(`fortress_user_${username}`);\n\n        if (!userDataString) {\n            toast({\n                variant: 'destructive',\n                title: 'Login Failed',\n                description: 'Invalid username or password.',\n            });\n            setIsSubmitting(false);\n            return;\n        }\n\n        const { salt, hash: storedHash } = JSON.parse(userDataString);\n\n        // The client re-hashes the entered password with the retrieved salt.\n        const hashToVerify = await createHash(password, salt);\n        \n        // The client compares the newly generated hash with the stored hash.\n        const isVerified = hashToVerify === storedHash;\n\n        if (isVerified) {\n            // If hashes match, grant access.\n            localStorage.setItem('fortress_user', username);\n            router.push('/dashboard');\n        } else {\n            toast({\n                variant: 'destructive',\n                title: 'Login Failed',\n                description: 'Invalid username or password.',\n            });\n        }\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        toast({\n            variant: 'destructive',\n            title: 'Login Failed',\n            description: 'An unexpected error occurred. Please try again.',\n        });\n    } finally {\n        setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <main className=\"flex min-h-screen flex-col items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md shadow-2xl\">\n        <CardHeader className=\"text-center\">\n          <div className=\"mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-primary/10 text-primary\">\n            <ShieldCheck className=\"h-8 w-8\" />\n          </div>\n          <CardTitle className=\"text-3xl font-bold\">Fortress</CardTitle>\n          <CardDescription>\n            Secure access using salted password hashing\n          </CardDescription>\n        </CardHeader>\n\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2\">\n                <TabsTrigger value=\"login\"><ShieldCheck className=\"mr-2\"/>Login</TabsTrigger>\n                <TabsTrigger value=\"register\"><UserPlus className=\"mr-2\"/>Register</TabsTrigger>\n            </TabsList>\n            <TabsContent value=\"login\">\n                <form onSubmit={handleLogin}>\n                <CardContent className=\"space-y-4 pt-6\">\n                    <div className=\"space-y-2\">\n                    <Label htmlFor=\"login-username\">Username</Label>\n                    <Input\n                        id=\"login-username\"\n                        name=\"username\"\n                        type=\"text\"\n                        placeholder=\"Enter your username\"\n                        required\n                        disabled={isSubmitting}\n                    />\n                    </div>\n                    <div className=\"space-y-2\">\n                    <Label htmlFor=\"login-password\">Password</Label>\n                    <Input\n                        id=\"login-password\"\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Enter your password\"\n                        required\n                        disabled={isSubmitting}\n                    />\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\">\n                    Your password will be hashed and never sent in plain text.\n                    </p>\n                </CardContent>\n                <CardFooter>\n                    <Button type=\"submit\" className=\"w-full\" size=\"lg\" disabled={isSubmitting}>\n                        {isSubmitting ? 'Verifying...' : 'Login'}\n                    </Button>\n                </CardFooter>\n                </form>\n            </TabsContent>\n            <TabsContent value=\"register\">\n                <form onSubmit={handleRegister}>\n                    <CardContent className=\"space-y-4 pt-6\">\n                        <div className=\"space-y-2\">\n                            <Label htmlFor=\"reg-username\">Username</Label>\n                            <Input\n                                id=\"reg-username\"\n                                name=\"username\"\n                                type=\"text\"\n                                placeholder=\"Choose a username\"\n                                required\n                                disabled={isSubmitting}\n                            />\n                        </div>\n                        <div className=\"space-y-2\">\n                            <Label htmlFor=\"reg-password\">Password</Label>\n                            <Input\n                                id=\"reg-password\"\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Choose a strong password\"\n                                required\n                                disabled={isSubmitting}\n                            />\n                        </div>\n                        <p className=\"text-xs text-muted-foreground\">\n                            A salted cryptographic hash will be stored, not your password.\n                        </p>\n                    </CardContent>\n                    <CardFooter>\n                        <Button type=\"submit\" className=\"w-full\" size=\"lg\" variant=\"secondary\" disabled={isSubmitting}>\n                            {isSubmitting ? 'Registering...' : 'Register'}\n                        </Button>\n                    </CardFooter>\n                </form>\n            </TabsContent>\n        </Tabs>\n      </Card>\n    </main>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}